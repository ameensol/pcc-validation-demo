{
  "name": "scratch-api",
  "version": "1.0.3",
  "description": "An API to interact with the Scratch 2.0 website",
  "main": "scratchapi.js",
  "repository": {
    "type": "git",
    "url": "git@github.com:trumank/scratch-api.git"
  },
  "author": {
    "name": "Truman Kilen"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/trumank/scratch-api/issues"
  },
  "homepage": "https://github.com/trumank/scratch-api",
  "readme": "# scratch-api\n\nA utility for interacting with the Scratch 2.0 website.\n\n## Installation\n\nInstall with npm:\n\n```sh\nnpm install scratch-api\n```\nOr by cloning this repository:\n```sh\ngit clone https://github.com/trumank/scratch-api.git\n```\n\n## Examples\n\n```javascript\nvar Scratch = require('scratch-api');\nScratch.createUserSession(username, password, function(err, user) {\n  if (err) return console.error(err);\n  user.setBackpack([{\n    type: 'script',\n    name: '',\n    scripts: [[['say:', 'Cheers!']]]\n  }],\n  function(err, res) {\n    if (err) return console.error(err);\n    console.log('Backpack set');\n  });\n});\n```\n\n## API\n\n### Scratch\n* [`createUserSession`](#createUserSession)\n* [`getProject`](#getProject)\n\n### Scratch.UserSession\n* [`getProject`](#UserSession.getProject)\n* [`setProject`](#UserSession.setProject)\n* [`getBackpack`](#UserSession.getBackpack)\n* [`setBackpack`](#UserSession.setBackpack)\n* [`cloud`](#UserSession.cloud)\n\n### Scratch.CloudSession\n* [`connect`](#CloudSession.connect)\n* [`end`](#CloudSession.end)\n* [`get`](#CloudSession.get)\n* [`set`](#CloudSession.set)\n* [`variables`](#CloudSession.variables)\n* [`Event: set`](#CloudSession._set)\n* [`Event: end`](#CloudSession._end)\n\n## Scratch\n\n<a name=\"createUserSession\"/>\n### Scratch.createUserSession(username, password, callback)\n\nCreated a new Scratch session by signing in with the given username and password.\n\n__Arguments__\n\n* `username` - The Scratch account username (not case sensitive).\n* `password` - The Scratch account password.\n* `callback(err, user)` - A callback that is called with the resulting user or an error if one occurs.\n\n<a name=\"getProject\"/>\n### Scratch.getProject(projectId, callback)\n\nRetrieves a JSON object of the given Scratch project. Equivalent to Scratch.UserSession.getProject but does not require being signed in.\n\n__Arguments__\n\n* `projectId` - The project's ID.\n* `callback(err, project)` - A callback that is called with the resulting project or an error if one occurs.\n\n## UserSession\n\n<a name=\"UserSession.getProject\"/>\n### Scratch.UserSession.getProject(projectId, callback)\n\nRetrieves a JSON object of the given Scratch project.\n\n__Arguments__\n\n* `projectId` - The project's ID.\n* `callback(err, project)` - A callback that is called with the resulting project or an error if one occurs.\n\n<a name=\"UserSession.setProject\"/>\n### Scratch.UserSession.setProject(projectId, payload, callback)\n\nUploads the given payload object or string to the project with the given ID. The user must own the given project or the request will fail.\n\n__Arguments__\n\n* `projectId` - The project's ID.\n* `payload` - A JSON object or string. If it is an object, it will be stringified before sent.\n* `callback(err)` - A callback that is called when it finishes and or an error occurs.\n\n<a name=\"UserSession.getBackpack\"/>\n### Scratch.UserSession.getBackpack(callback)\n\nRetrieves the signed in user's backpack as a JSON object.\n\n__Arguments__\n\n* `callback(err, payload)` - A callback that is called with the returned backpack object or an error if one occurs.\n\n<a name=\"UserSession.setBackpack\"/>\n### Scratch.UserSession.setBackpack(payload, callback)\n\nUploads the given payload to the user's backpack.\n\n__Arguments__\n* `payload` - A JSON object or a string to be uploaded.\n* `callback(err)` - A callback that is called when the request finishes or an error occurs.\n\n<a name=\"UserSession.cloud\"/>\n### Scratch.UserSession.cloud(projectId, callback)\n\nConnects to a cloud variable session for the given project.\n\n__Arguments__\n* `projectId` - The project's ID.\n* `callback(err, cloudSession)` - A callback that is called with the returned CloudSession object or if an error occurs.\n\n## Scratch.CloudSession\n\n<a name=\"CloudSession.connect\"/>\n### Scratch.CloudSession.connect(callback)\n\nUsed to start a newly created CloudSession.\n\n__Arguments__\n* `callback` - A callback that is called when a connection is made or an error occurs.\n\n<a name=\"CloudSession.end\"/>\n### Scratch.CloudSession.end()\n\nUsed to disconnect from the server and end the cloud session.\n\n<a name=\"CloudSession.get\"/>\n### Scratch.CloudSession.get(name)\n\nReturns the value of a cloud variable or undefined if it does not exist.\n\n__Arguments__\n* `name` - The variable name including the cloud (☁) symbol.\n\n<a name=\"CloudSession.set\"/>\n### Scratch.CloudSession.set(name, value)\n\nSets the variable with the given name to the given value.\n\n__Arguments__\n* `name` - The variable name including the cloud (☁) symbol.\n* `value` - A new value.\n\n<a name=\"CloudSession.variables\"/>\n### Scratch.CloudSession.variables\n\nAn object used as a hash table for all cloud variables. Variables can both read set directly via this object or through the corresponding [`get`](#CloudSession.get) and [`set`](#CloudSession.set) methods.\n\n<a name=\"CloudSession._set\"/>\n### Scratch.CloudSession Event: 'set'\n\nEmitted when a cloud variable is changed.\n\n__Parameters__\n* `name` - The variable name.\n* `value` - The variables new value.\n\n<a name=\"CloudSession._end\"/>\n### Scratch.CloudSession Event: 'end'\n\nEmitted when the server closes the connection (should never happen unless the client breaks).\n",
  "readmeFilename": "README.md",
  "_id": "scratch-api@1.0.3",
  "dist": {
    "shasum": "02937682f74363674a7e9a429da13f62e032a9e2"
  },
  "_from": "scratch-api@",
  "_resolved": "https://registry.npmjs.org/scratch-api/-/scratch-api-1.0.3.tgz"
}
